#------------------------------
# OUTPUT:
#------------------------------
# Question 1: What is the most common type of insurance claim?
# Answer 1: The most common claim type is: Passenger Property Loss .
#------------------------------
# CODE (Visualization for the report)
#------------------------------
tsa_claims %>%
group_by(ClaimType) %>%
summarize(ClaimCounts = n()) %>%
mutate(Percent = ClaimCounts / sum(ClaimCounts) * 100) %>%
mutate(Label = paste0(ClaimType, ": ", round(Percent, 1), "%")) %>%
arrange(desc(ClaimCounts)) %>%
mutate(ClaimType = factor(ClaimType, levels = ClaimType)) %>%
ggplot(aes(x = "", y = ClaimCounts, fill = ClaimType)) +
geom_col(width = 1) +
geom_text(aes(label = ifelse(Percent >= 1, Label, "")),
position = position_stack(vjust = 0.5), size = 3) +
coord_polar(theta = "y") +
labs(
title = "What is the Most Common Type of Insurance Claim?",
fill = "Claim Type"
) +
theme_void() +
theme(
plot.title = element_text(face = "bold", size = 16),
legend.title = element_text(face = "bold"),
legend.position = "right"
)
#------------------------------
# OUTPUT:
#------------------------------
# Question 1: What is the most common type of insurance claim?
# Answer 1: The most common claim type is: Passenger Property Loss .
#------------------------------
# CODE (Visualization for the report)
#------------------------------
tsa_claims %>%
group_by(ClaimType) %>%
summarize(ClaimCounts = n()) %>%
mutate(Percent = ClaimCounts / sum(ClaimCounts) * 100) %>%
mutate(ClaimType = ifelse(Percent < 1, "Other", ClaimType)) %>%
group_by(ClaimType) %>%
summarize(ClaimCounts = sum(ClaimCounts)) %>%
mutate(
Percent = ClaimCounts / sum(ClaimCounts) * 100,
Label = paste0(ClaimType, ": ", round(Percent, 1), "%"),
ClaimType = factor(ClaimType, levels = ClaimType)  # lock order
) %>%
ggplot(aes(x = "", y = ClaimCounts, fill = ClaimType)) +
geom_col(width = 1) +
geom_text(aes(label = Label),
position = position_stack(vjust = 0.5), size = 4) +
coord_polar(theta = "y") +
labs(
title = "What is the Most Common Type of Insurance Claim?",
subtitle = "Types under 1% grouped as 'Other'",
fill = "Claim Type"
) +
theme_void() +
theme(
plot.title = element_text(face = "bold", size = 16),
plot.subtitle = element_text(size = 11, color = "gray40"),
legend.title = element_text(face = "bold"),
legend.position = "right"
)
#------------------------------
# OUTPUT:
# [1] "Question 2: Which claim site within the airport are claims most commonly filed for?"
# Answer 2: The most common claim site (location of the incident): Checked Baggage .
#------------------------------
# CODE (Visualization for the report)
#------------------------------
tsa_claims %>%
count(IncidentLocation) %>%
ggplot(aes(x = reorder(IncidentLocation, n), y = n, fill = IncidentLocation)) +
geom_col() +
coord_flip() +
labs(title = "Number of Claims by Incident Location",
x = "Incident Location", y = "Number of Claims") +
theme_minimal()
#------------------------------
# OUTPUT:
# [1] "Question 2: Which claim site within the airport are claims most commonly filed for?"
# Answer 2: The most common claim site (location of the incident): Checked Baggage .
#------------------------------
# CODE (Visualization for the report)
#------------------------------
tsa_claims %>%
group_by(IncidentLocation) %>%
summarize(SiteCounts = n()) %>%
ggplot(aes(x = reorder(IncidentLocation, SiteCounts), y = SiteCounts, fill = IncidentLocation)) +
geom_col(width = 0.7) +
scale_y_log10(labels = scales::comma) +
coord_flip() +
labs(
title = "Claim Counts by Incident Location (Log Scale)",
subtitle = "Logarithmic scale used to reveal rare incident types",
x = "Incident Location",
y = "Number of Claims (Log Scale)",
fill = "Location"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(face = "bold", size = 16),
plot.subtitle = element_text(size = 11, color = "gray40"),
axis.text = element_text(size = 10),
legend.position = "none"
)
#------------------------------
# OUTPUT:
# [1] "Question 2: Which claim site within the airport are claims most commonly filed for?"
# Answer 2: The most common claim site (location of the incident): Checked Baggage .
#------------------------------
# CODE (Visualization for the report)
#------------------------------
tsa_claims %>%
group_by(IncidentLocation) %>%
summarize(SiteCounts = n()) %>%
ggplot(aes(x = reorder(IncidentLocation, SiteCounts), y = SiteCounts, fill = IncidentLocation)) +
geom_col(width = 0.7) +
scale_y_log10(labels = scales::comma) +
coord_flip() +
labs(
title = "Which claim site within the airport are claims most commonly filed for?",
x = "Incident Location",
y = "Number of Claims (Logarithmic Scale)",
fill = "Location"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(face = "bold", size = 16),
plot.subtitle = element_text(size = 11, color = "gray40"),
axis.text = element_text(size = 10),
legend.position = "none"
)
top_by_location %>%
mutate(text = paste0(IncidentLocation, ": ", ClaimType, " (", Counts, " claims).")) %>%
pull(text) %>%
cat(sep = "\n")
top_by_location %>%
mutate(text = paste0("* ", IncidentLocation, ": ", ClaimType, " (", Counts, " claims).")) %>%
pull(text) %>%
cat(sep = "\n")
# OUTPUT:
# [1] "Question 3: What is the most common claim type at each claim site (incident location)?"
# Answer 3: The most common claim type at each incident location:
# * Checked Baggage: Passenger Property Loss (53364 claims).
# * Checkpoint: Property Damage (7092 claims).
# * Motor Vehicle: Passenger Property Loss (2 claims).
# * Other: Passenger Property Loss (159 claims).
#------------------------------
# CODE (Visual for the report):
#------------------------------
tsa_claims %>%
group_by(IncidentLocation, ClaimType) %>%
summarize(Counts = n(), .groups = "drop") %>%
ggplot(aes(x = IncidentLocation, y = Counts, fill = ClaimType)) +
geom_col(position = "dodge", width = 0.7) +
scale_y_log10(labels = scales::comma) +
labs(
title = "What is the Most Common Claim Type at Each Incident Location?",
x = "Incident Location",
y = "Number of Claims (Logarithmic Scale)",
fill = "Claim Type"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(face = "bold", size = 16),
plot.subtitle = element_text(size = 11, color = "gray40"),
axis.text.x = element_text(angle = 15, vjust = 1, hjust = 1),
legend.position = "bottom",
legend.title = element_text(face = "bold")
)
# OUTPUT:
# [1] "Question 3: What is the most common claim type at each claim site (incident location)?"
# Answer 3: The most common claim type at each incident location:
# * Checked Baggage: Passenger Property Loss (53364 claims).
# * Checkpoint: Property Damage (7092 claims).
# * Motor Vehicle: Passenger Property Loss (2 claims).
# * Other: Passenger Property Loss (159 claims).
#------------------------------
# CODE (Visual for the report):
#------------------------------
tsa_claims %>%
group_by(IncidentLocation, ClaimType) %>%
summarize(Counts = n(), .groups = "drop") %>%
ggplot(aes(x = IncidentLocation, y = Counts, fill = ClaimType)) +
geom_col(position = "dodge", width = 0.7) +
scale_y_log10(labels = scales::comma) +
labs(
title = "What is the Most Common Claim Type at Each Incident Location?",
x = "Incident Location",
y = "Number of Claims (Log Scale)",
fill = "Claim Type"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(face = "bold", size = 16),
plot.subtitle = element_text(size = 11, color = "gray40"),
axis.text.x = element_text(angle = 15, vjust = 1, hjust = 1),
legend.position = "bottom",
legend.title = element_text(face = "bold")
)
# OUTPUT:
# [1] "Question 3: What is the most common claim type at each claim site (incident location)?"
# Answer 3: The most common claim type at each incident location:
# * Checked Baggage: Passenger Property Loss (53364 claims).
# * Checkpoint: Property Damage (7092 claims).
# * Motor Vehicle: Passenger Property Loss (2 claims).
# * Other: Passenger Property Loss (159 claims).
#------------------------------
# CODE (Visual for the report):
#------------------------------
tsa_claims %>%
group_by(IncidentLocation, ClaimType) %>%
summarize(Counts = n(), .groups = "drop") %>%
ggplot(aes(x = IncidentLocation, y = Counts, fill = ClaimType)) +
geom_col(position = "dodge", width = 0.7) +
scale_y_log10(labels = scales::comma) +
labs(
title = "What is the Most Common Claim Type at Each Incident Location?",
x = "Incident Location",
y = "Number of Claims (Logarithmic Scale) ",
fill = "Claim Type"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(face = "bold", size = 16),
plot.subtitle = element_text(size = 11, color = "gray40"),
axis.text.x = element_text(angle = 15, vjust = 1, hjust = 1),
legend.position = "bottom",
legend.title = element_text(face = "bold")
)
# =============================================================================
# â€¢	Question 4: What is the median claim amount?
# Answer 4: $184 is the median claim amound.
# Note: The Max claim was $125 million, a huge outlier.
#------------------------------
# CODE (Viewing List):
#------------------------------
summary(select(tsa_claims, ClaimAmount))
cat("Answer 4: The median claim amount is $", median_value, " ")
# ClaimAmount
# Min.   :        0
# 1st Qu.:       65
# Median :      184
# Mean   :     3635
# 3rd Qu.:      481
# Max.   :125000000
#------------------------------
# CODE (Automatic Answer for the report):
#------------------------------
print("Question 4: What is the median claim amount?")
median_value <- median(tsa_claims$ClaimAmount, na.rm = TRUE)
cat("Answer 4: The median claim amount is $", median_value, " ")
# ClaimAmount
# Min.   :        0
# 1st Qu.:       65
# Median :      184
# Mean   :     3635
# 3rd Qu.:      481
# Max.   :125000000
#------------------------------
# CODE (Automatic Answer for the report):
#------------------------------
print("Question 4: What is the median claim amount?")
median_value <- median(tsa_claims$ClaimAmount, na.rm = TRUE)
rounded_up <- ceiling(median_value)
cat("Answer 4: The median claim amount is $", median_value,
", rounded up to $", rounded_up, ".\n")
#------------------------------
# OUTPUT:
# [1] "Question 4: What is the median claim amount?"
# Answer 4: The median claim amount is $ 183.69 , rounded up to $ 184 .
#------------------------------
# CODE (Visualization for the report)
#------------------------------
ggplot(tsa_claims, aes(y = ClaimAmount)) +
geom_boxplot() +
scale_y_log10(labels = scales::dollar) +
labs(title = "Distribution of Claim Amounts",
y = "Claim Amount (Log Scale)") +
theme_minimal()
#------------------------------
# OUTPUT:
# [1] "Question 4: What is the median claim amount?"
# Answer 4: The median claim amount is $ 183.69 , rounded up to $ 184 .
#------------------------------
# CODE (Visualization for the report)
#------------------------------
ggplot(tsa_claims, aes(y = ClaimAmount)) +
geom_boxplot() +
scale_y_log10(labels = scales::dollar) +
labs(title = "What is the median claim amount?",
subtitle = "Logarithmic scale highlights extreme outliers and central tendency",
x = "", y = "Claim Amount (Log Scale)") +
theme_minimal()
#------------------------------
# OUTPUT:
# [1] "Question 4: What is the median claim amount?"
# Answer 4: The median claim amount is $ 183.69 , rounded up to $ 184 .
#------------------------------
# CODE (Visualization for the report)
#------------------------------
ggplot(tsa_claims, aes(y = ClaimAmount)) +
geom_boxplot() +
scale_y_log10(labels = scales::dollar) +
labs(title = "What is the median claim amount?",
subtitle = "Logarithmic scale highlights extreme outliers and central tendency",
x = "", y = "Claim Amount (Log Scale)") +
theme_minimal() +
theme(
axis.text.x = element_blank(), # removes text labels in x-axis
axis.ticks.x = element_blank() # removes ticks in x-axis
)
#------------------------------
# OUTPUT:
# [1] "Question 4: What is the median claim amount?"
# Answer 4: The median claim amount is $ 183.69 , rounded up to $ 184 .
#------------------------------
# CODE (Visualization for the report)
#------------------------------
ggplot(tsa_claims, aes(y = ClaimAmount)) +
geom_boxplot() +
scale_y_log10(labels = scales::dollar) +
labs(title = "What is the median claim amount? (Box Plot)",
subtitle = "Logarithmic scale highlights extreme outliers and central tendency",
x = "", y = "Claim Amount (Log Scale)") +
theme_minimal() +
theme(
axis.text.x = element_blank(), # removes text labels in x-axis
axis.ticks.x = element_blank() # removes ticks in x-axis
)
# Used logarithmic scale due to extreme differences in value ranges.
# =============================================================================
# â€¢	What is the overall claim approval rate for the entire U.S.? Hint: You can
#   get the number of claims for each status add then add a column that uses
#   the sum() function to calculate the total number of claims.
# Answer 5: 24.4% of claims were Approved. 19.4% were Settled.
# About 43.8% had some form of reimbursement (sum of Approved and Settled).
#------------------------------
# CODE (Viewing List):
#------------------------------
claimstatus <- tsa_claims %>%
group_by(ClaimStatus) %>%
summarize(Count = n()) # Groups by Claim Status (recall that it was renamed)
claimstatus <- claimstatus %>%
mutate(TotalCount = sum(Count)) # Add Total Count Column
status %>%
mutate(ApprovalRate = Count / TotalCount * 100) # Calculate Percentages
claimstatus %>%
mutate(ApprovalRate = Count / TotalCount * 100) # Calculate Percentages
# ClaimStatus                  Count TotalCount ApprovalRate
# <chr>                        <int>      <int>        <dbl>
# 1 Approved                     23167      94848     24.4
# 2 Canceled                         6      94848      0.00633
# 3 Denied                       53273      94848     56.2
# 4 Pending response from claimâ€¦     1      94848      0.00105
# 5 Settled                      18401      94848     19.4
#------------------------------
# CODE (Automatic Answer for the report):
#------------------------------
approved_rate <- claimstatus %>%
filter(ClaimStatus == "Approved") %>%
pull(ApprovalRate)
settled_rate <- claimstatus %>%
filter(ClaimStatus == "Settled") %>%
pull(ApprovalRate)
# Used logarithmic scale due to extreme differences in value ranges.
# =============================================================================
# â€¢	What is the overall claim approval rate for the entire U.S.? Hint: You can
#   get the number of claims for each status add then add a column that uses
#   the sum() function to calculate the total number of claims.
# Answer 5: 24.4% of claims were Approved. 19.4% were Settled.
# About 43.8% had some form of reimbursement (sum of Approved and Settled).
#------------------------------
# CODE (Viewing List):
#------------------------------
claimstatus <- tsa_claims %>%
group_by(ClaimStatus) %>%
summarize(Count = n()) # Groups by Claim Status (recall that it was renamed)
claimstatus <- claimstatus %>%
mutate(TotalCount = sum(Count)) # Add Total Count Column
claimstatus %>%
mutate(ApprovalRate = Count / TotalCount * 100) # Calculate Percentages
# ClaimStatus                  Count TotalCount ApprovalRate
# <chr>                        <int>      <int>        <dbl>
# 1 Approved                     23167      94848     24.4
# 2 Canceled                         6      94848      0.00633
# 3 Denied                       53273      94848     56.2
# 4 Pending response from claimâ€¦     1      94848      0.00105
# 5 Settled                      18401      94848     19.4
#------------------------------
# CODE (Automatic Answer for the report):
#------------------------------
approved_rate <- claimstatus %>%
filter(ClaimStatus == "Approved") %>%
pull(ApprovalRate)
# <chr>                        <int>      <int>        <dbl>
# 1 Approved                     23167      94848     24.4
# 2 Canceled                         6      94848      0.00633
# 3 Denied                       53273      94848     56.2
# 4 Pending response from claimâ€¦     1      94848      0.00105
# 5 Settled                      18401      94848     19.4
#------------------------------
# CODE (Automatic Answer for the report):
#------------------------------
# Step 1: Summarize and calculate ApprovalRate all at once
claimstatus <- tsa_claims %>%
group_by(ClaimStatus) %>%
summarize(Count = n()) %>%
mutate(
TotalCount = sum(Count),
ApprovalRate = Count / TotalCount * 100
)
# Step 2: Pull values safely now that they exist
approved_rate <- claimstatus %>%
filter(ClaimStatus == "Approved") %>%
pull(ApprovalRate)
settled_rate <- claimstatus %>%
filter(ClaimStatus == "Settled") %>%
pull(ApprovalRate)
total_reimbursement <- approved_rate + settled_rate
# Step 3: Print the answer
print("Question 5: What is the overall claim approval rate for the entire U.S.?")
cat(
"Answer 5: ",
round(approved_rate, 1), "% of claims were Approved. ",
round(settled_rate, 1), "% were Settled.\n",
"About ", round(total_reimbursement, 1), "% of claims received some form of reimbursement.\n",
sep = ""
)
print("Question 5: What is the overall claim approval rate for the entire U.S.?")
cat(
"Answer 5: ",
round(approved_rate, 1), "% of claims were Approved. ",
round(settled_rate, 1), "% were Settled.",
"About ", round(total_reimbursement, 1), "% of claims received some form of reimbursement.\n",
sep = ""
)
cat(
"Answer 5: ",
round(approved_rate, 1), "% of claims were Approved. ",
round(settled_rate, 1), "% were Settled. ",
"About ", round(total_reimbursement, 1), "% of claims received some form of reimbursement.\n",
sep = ""
)
cat(
"Answer 5: ",
round(approved_rate, 1), "% of claims were Approved. ",
round(settled_rate, 1), "% were Settled.\n",
"About ", round(total_reimbursement, 1), "% of claims received some form of reimbursement.\n",
sep = ""
)
#------------------------------
# OUTPUT:
#------------------------------
# [1] "Question 5: What is the overall claim approval rate for the entire U.S.?"
# Answer 5: 24.4% of claims were Approved. 19.4% were Settled.
# About 43.8% of claims received some form of reimbursement.
#------------------------------
# CODE (Visual for the report):
#------------------------------
claimstatus %>%
mutate(Label = paste0(ClaimStatus, ": ", round(ApprovalRate, 1), "%")) %>%
ggplot(aes(x = "", y = Count, fill = ClaimStatus)) +
geom_col(width = 1) +
geom_text(aes(label = ifelse(ApprovalRate >= 1, Label, "")),
position = position_stack(vjust = 0.5), size = 4) +
coord_polar(theta = "y") +
labs(
title = "Claim Outcomes Across the U.S.",
subtitle = "Based on claim status percentages",
fill = "Claim Status"
) +
theme_void() +
theme(
plot.title = element_text(face = "bold", size = 16),
plot.subtitle = element_text(size = 11, color = "gray40"),
legend.title = element_text(face = "bold"),
legend.position = "right"
)
#------------------------------
# OUTPUT:
#------------------------------
# [1] "Question 5: What is the overall claim approval rate for the entire U.S.?"
# Answer 5: 24.4% of claims were Approved. 19.4% were Settled.
# About 43.8% of claims received some form of reimbursement.
#------------------------------
# CODE (Visual for the report):
#------------------------------
claimstatus %>%
mutate(Label = paste0(ClaimStatus, ": ", round(ApprovalRate, 1), "%")) %>%
ggplot(aes(x = "", y = Count, fill = ClaimStatus)) +
geom_col(width = 1) +
geom_text(aes(label = ifelse(ApprovalRate >= 1, Label, "")),
position = position_stack(vjust = 0.5), size = 4) +
coord_polar(theta = "y") +
labs(
title = "What is the overall claim approval rate for the entire U.S.?",
subtitle = "Based on claim status percentages",
fill = "Claim Status"
) +
theme_void() +
theme(
plot.title = element_text(face = "bold", size = 16),
plot.subtitle = element_text(size = 11, color = "gray40"),
legend.title = element_text(face = "bold"),
legend.position = "right"
)
